/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

/**
 *
 * @author nakim
 */
public class MainFrame extends javax.swing.JFrame
{

    /**
     * Creates new form MainFrame
     */
    public MainFrame()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        panelHeader = new javax.swing.JPanel();
        labelIPServer = new javax.swing.JLabel();
        textFieldIPServer = new javax.swing.JTextField();
        labelPortServer = new javax.swing.JLabel();
        spinnerPortServer = new javax.swing.JSpinner();
        buttonConnect = new javax.swing.JButton();
        buttonClear = new javax.swing.JButton();
        splitPane = new javax.swing.JSplitPane();
        tabbedPane = new javax.swing.JTabbedPane();
        panelGetDocuments = new javax.swing.JPanel();
        labelDocumentName = new javax.swing.JLabel();
        textFieldDocumentName = new javax.swing.JTextField();
        checkBoxEncrypt = new javax.swing.JCheckBox();
        labelCipherProvider = new javax.swing.JLabel();
        comboBoxCipherProviders = new javax.swing.JComboBox();
        labelCipherKey = new javax.swing.JLabel();
        textFieldCipherKeyName = new javax.swing.JTextField();
        checkBoxAuthentication = new javax.swing.JCheckBox();
        labelAuthenticationProvider = new javax.swing.JLabel();
        comboBoxAuthenticationProviders = new javax.swing.JComboBox();
        labelAuthenticationKey = new javax.swing.JLabel();
        textFieldAuthenticationKeyName = new javax.swing.JTextField();
        checkBoxIntegrity = new javax.swing.JCheckBox();
        labelIntegrityProvider = new javax.swing.JLabel();
        comboBoxIntegrityProviders = new javax.swing.JComboBox();
        scrollPane = new javax.swing.JScrollPane();
        textAreaOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Secure Document Client");

        labelIPServer.setText("IP Address : ");
        panelHeader.add(labelIPServer);

        textFieldIPServer.setPreferredSize(new java.awt.Dimension(100, 28));
        panelHeader.add(textFieldIPServer);

        labelPortServer.setText("Port :");
        panelHeader.add(labelPortServer);

        spinnerPortServer.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        spinnerPortServer.setPreferredSize(new java.awt.Dimension(100, 28));
        panelHeader.add(spinnerPortServer);

        buttonConnect.setText("Connect");
        panelHeader.add(buttonConnect);

        getContentPane().add(panelHeader, java.awt.BorderLayout.PAGE_START);

        buttonClear.setText("Clear");
        getContentPane().add(buttonClear, java.awt.BorderLayout.PAGE_END);

        splitPane.setDividerLocation(250);
        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        panelGetDocuments.setLayout(new java.awt.GridBagLayout());

        labelDocumentName.setText("Document name : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(labelDocumentName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.4;
        panelGetDocuments.add(textFieldDocumentName, gridBagConstraints);

        checkBoxEncrypt.setText("Encrypt file");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(checkBoxEncrypt, gridBagConstraints);

        labelCipherProvider.setText("Cipher provider : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(labelCipherProvider, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(comboBoxCipherProviders, gridBagConstraints);

        labelCipherKey.setText("Cipher key : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(labelCipherKey, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(textFieldCipherKeyName, gridBagConstraints);

        checkBoxAuthentication.setText("Authenticate file");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(checkBoxAuthentication, gridBagConstraints);

        labelAuthenticationProvider.setText("Authentication provider : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(labelAuthenticationProvider, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(comboBoxAuthenticationProviders, gridBagConstraints);

        labelAuthenticationKey.setText("Authentication key : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(labelAuthenticationKey, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(textFieldAuthenticationKeyName, gridBagConstraints);

        checkBoxIntegrity.setText("Check integrity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        panelGetDocuments.add(checkBoxIntegrity, gridBagConstraints);

        labelIntegrityProvider.setText("Integrity provider : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(labelIntegrityProvider, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelGetDocuments.add(comboBoxIntegrityProviders, gridBagConstraints);

        tabbedPane.addTab("Get Documents", panelGetDocuments);

        splitPane.setTopComponent(tabbedPane);

        textAreaOutput.setColumns(20);
        textAreaOutput.setRows(5);
        scrollPane.setViewportView(textAreaOutput);

        splitPane.setRightComponent(scrollPane);

        getContentPane().add(splitPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonConnect;
    private javax.swing.JCheckBox checkBoxAuthentication;
    private javax.swing.JCheckBox checkBoxEncrypt;
    private javax.swing.JCheckBox checkBoxIntegrity;
    private javax.swing.JComboBox comboBoxAuthenticationProviders;
    private javax.swing.JComboBox comboBoxCipherProviders;
    private javax.swing.JComboBox comboBoxIntegrityProviders;
    private javax.swing.JLabel labelAuthenticationKey;
    private javax.swing.JLabel labelAuthenticationProvider;
    private javax.swing.JLabel labelCipherKey;
    private javax.swing.JLabel labelCipherProvider;
    private javax.swing.JLabel labelDocumentName;
    private javax.swing.JLabel labelIPServer;
    private javax.swing.JLabel labelIntegrityProvider;
    private javax.swing.JLabel labelPortServer;
    private javax.swing.JPanel panelGetDocuments;
    private javax.swing.JPanel panelHeader;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JSpinner spinnerPortServer;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextArea textAreaOutput;
    private javax.swing.JTextField textFieldAuthenticationKeyName;
    private javax.swing.JTextField textFieldCipherKeyName;
    private javax.swing.JTextField textFieldDocumentName;
    private javax.swing.JTextField textFieldIPServer;
    // End of variables declaration//GEN-END:variables
}
